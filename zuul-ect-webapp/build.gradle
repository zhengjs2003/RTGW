plugins {
    id 'net.saliman.cobertura' version '2.2.7'
    id "com.bmuschko.tomcat" version "2.2.2"
    id 'codenarc'
    id 'findbugs'
    id 'checkstyle'
}
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'cobertura'
apply plugin: 'groovy'

dependencies {
    compile project(":zuul-core")
    compile 'com.netflix.blitz4j:blitz4j:1.35'

    def slf4jVersion="1.7.12"
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
//    compile "org.slf4j:slf4j-log4j12:${slf4jVersion}"
//    compile 'log4j:log4j:1.2.17'
    compile 'org.json:json:20140107'
    compile 'ch.qos.logback:logback-core:1.1.7'
    compile 'ch.qos.logback:logback-classic:1.1.7'

    compile 'commons-beanutils:commons-beanutils:1.8.2'
    compile 'commons-fileupload:commons-fileupload:1.3'
    compile 'org.apache.httpcomponents:httpclient:4.5'
    providedCompile 'javax.servlet:servlet-api:2.5'

    provided 'org.powermock:powermock-module-junit4:1.6.3'
    provided 'org.powermock:powermock-api-mockito:1.6.3'
    provided 'junit:junit-dep:4.10'

    def tomcatVersion = '8.0.23'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

}

eclipse {
  classpath {
        downloadSources = true
        downloadJavadoc = true
  }
}

war {
    webXml = file('src/main/webapp/WEB-INF/web.xml')
    webInf{
        from('src/main/groovy/filters') {
            into('classes')
        }
    }
}

jettyRun.contextPath = '/'

jettyRun.doFirst {
    System.setProperty("zuul.filter.root", "/ztsoft/usr/wasadm/gw/filters")
}

cobertura {
    coverageSourceDirs = [sourceSets.main.groovy.srcDirs, sourceSets.main.java.srcDirs]
    coverageFormats = ['xml', 'html']
}

checkstyle {
    toolVersion = '6.7'
    ignoreFailures = true
    showViolations = false
    sourceSets = [sourceSets.main]
    reportsDir = rootProject.file('zuul-ect-webapp/build/reports/checkstyle')
}

codenarc {
    configFile = rootProject.file('zuul-ect-webapp/config/codenarc/rules.groovy')
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportFormat = 'xml'
}

findbugs {
    effort = 'min'
    ignoreFailures = true
    sourceSets = [sourceSets.main]
}

tomcat {
    contextPath = '/'
}

[tomcatRun, tomcatRunWar]*.doFirst {
    System.setProperty("zuul.filter.root", "/ztsoft/usr/wasadm/gw/filters")
}
